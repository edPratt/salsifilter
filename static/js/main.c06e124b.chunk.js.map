{"version":3,"sources":["datastore.js","Products.js","App.js","serviceWorker.js","index.js"],"names":["window","datastore","getProducts","this","products","getProperties","properties","getOperators","operators","id","property_values","property_id","value","name","type","values","text","String","prototype","capitalize","charAt","toUpperCase","slice","Products","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getInitialState","property","propertyType","operator","propertyValue","propertyValues","resetState","setState","handleChange","event","filter","target","currentProperty","tempPropertyValues","Set","forEach","product","map","add","Array","from","defineProperty","handleChangeMultiple","options","i","l","length","selected","push","state","_this2","classes","operatorsByType","string","number","enumerated","operatorFn","equals","a","b","isNaN","parseInt","greater_than","less_than","any","includes","none","in","contains","react_default","createElement","className","root","autoComplete","FormControl_default","formControl","Grid_default","container","spacing","item","xs","Select_default","onChange","inputProps","MenuItem_default","key","concat","multiple","native","Button_default","variant","color","button","onClick","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","element","some","scope","Component","withStyles","theme","marginTop","unit","marginLeft","marginRight","display","flexWrap","flexGrow","minWidth","margin","App","src_Products","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,OAAOC,UAAY,CACjBC,YAAa,WACX,OAAOC,KAAKC,UAGdC,cAAe,WACb,OAAOF,KAAKG,YAGdC,aAAc,WACZ,OAAOJ,KAAKK,WAGdJ,SAAU,CACR,CACEK,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,cAET,CACED,YAAa,EACbC,MAAO,SAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,eAET,CACED,YAAa,EACbC,MAAO,WAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,cAET,CACED,YAAa,EACbC,MAAO,SAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,eAET,CACED,YAAa,EACbC,MAAO,UAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,YAET,CACED,YAAa,EACbC,MAAO,QAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,eAET,CACED,YAAa,EACbC,MAAO,WAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,OAET,CACED,YAAa,EACbC,MAAO,SAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,iBAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,OAET,CACED,YAAa,EACbC,MAAO,UAET,CACED,YAAa,EACbC,MAAO,GAET,CACED,YAAa,EACbC,MAAO,WAIb,CACEH,GAAI,EACJC,gBAAiB,CACf,CACEC,YAAa,EACbC,MAAO,UAET,CACED,YAAa,EACbC,MAAO,SAET,CACED,YAAa,EACbC,MAAO,IAET,CACED,YAAa,EACbC,MAAO,YAMfN,WAAY,CACV,CACEG,GAAI,EACJI,KAAM,eACNC,KAAM,UAER,CACEL,GAAI,EACJI,KAAM,QACNC,KAAM,UAER,CACEL,GAAI,EACJI,KAAM,cACNC,KAAM,UAER,CACEL,GAAI,EACJI,KAAM,WACNC,KAAM,aACNC,OAAQ,CACN,QAC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","file":"static/js/main.c06e124b.chunk.js","sourcesContent":["window.datastore = {\r\n  getProducts: function() {\r\n    return this.products;\r\n  },\r\n\r\n  getProperties: function() {\r\n    return this.properties;\r\n  },\r\n\r\n  getOperators: function() {\r\n    return this.operators;\r\n  },\r\n\r\n  products: [\r\n    {\r\n      id: 0,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Headphones'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'black'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 5\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'electronics'\r\n        },\r\n        {\r\n          property_id: 4,\r\n          value: 'false'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 1,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Cell Phone'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'black'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 3\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'electronics'\r\n        },\r\n        {\r\n          property_id: 4,\r\n          value: 'true'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Keyboard'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'grey'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 5\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'electronics'\r\n        },\r\n        {\r\n          property_id: 4,\r\n          value: 'false'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Cup'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'white'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 3\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'kitchenware'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 4,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Key'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'silver'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 1\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'tools'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 5,\r\n      property_values: [\r\n        {\r\n          property_id: 0,\r\n          value: 'Hammer'\r\n        },\r\n        {\r\n          property_id: 1,\r\n          value: 'brown'\r\n        },\r\n        {\r\n          property_id: 2,\r\n          value: 19\r\n        },\r\n        {\r\n          property_id: 3,\r\n          value: 'tools'\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n\r\n  properties: [\r\n    {\r\n      id: 0,\r\n      name: 'Product Name',\r\n      type: 'string'\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'color',\r\n      type: 'string'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'weight (oz)',\r\n      type: 'number'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'category',\r\n      type: 'enumerated',\r\n      values: [\r\n        'tools',\r\n        'electronics',\r\n        'kitchenware'\r\n      ]\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'wireless',\r\n      type: 'enumerated',\r\n      values: [\r\n        'true',\r\n        'false'\r\n      ]\r\n    }\r\n  ],\r\n\r\n  operators: [\r\n    {\r\n      text: 'Equals',\r\n      id: 'equals'\r\n    },\r\n    {\r\n      text: 'Is greater than',\r\n      id: 'greater_than'\r\n    },\r\n    {\r\n      text: 'Is less than',\r\n      id: 'less_than'\r\n    },\r\n    {\r\n      text: 'Has any value',\r\n      id: 'any'\r\n    },\r\n    {\r\n      text: 'Has no value',\r\n      id: 'none'\r\n    },\r\n    {\r\n      text: 'Is any of',\r\n      id: 'in'\r\n    },\r\n    {\r\n      text: 'Contains',\r\n      id: 'contains'\r\n    }\r\n  ]\r\n}\r\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nString.prototype.capitalize = function() {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n}\n\nclass Products extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = this.getInitialState();\n  }\n\n  getInitialState = () => {\n    const initialState = {\n      property: -1,\n      propertyType: 'string',\n      operator: -1,\n      propertyValue: [null],\n      propertyValues: [],\n    }\n    return initialState;\n  }\n\n  resetState = () => {\n    this.setState(this.getInitialState());\n  }\n\n  handleChange = event => {\n    let propertyType = window.datastore.getProperties().filter(property => property.id === event.target.value)[0];\n    if (event.target.name === \"property\") {\n      let currentProperty = event.target.value;\n      let tempPropertyValues = new Set();\n      window.datastore.getProducts().forEach(function(product) {\n        product.property_values.map(function (property) { \n          if (property.property_id === currentProperty) {\n            tempPropertyValues.add(property.value);\n          }\n        });\n      })\n      this.setState({\n        propertyValues: Array.from(tempPropertyValues),\n        propertyType: propertyType ? propertyType.type : 'string'\n      })\n    } \n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  };\n\n  handleChangeMultiple = event => {\n    const { options } = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    this.setState({\n      propertyValue: value.length ? value : [null]\n    });\n  };\n\n  render() {\n\n    const { classes } = this.props;\n\n    const operatorFns = {\n      'equals': function(a, b) { \n        if (b.length !== 1) {\n          return false;\n        }\n        return isNaN(parseInt(b[0])) ? a === b[0] : a === parseInt(b[0]);\n      },\n      'greater_than': function(a, b) {\n        if (b.length !== 1) {\n          return false;\n        }\n        return a > b[0];\n      },\n      'less_than': function(a, b) { \n        if (b.length !== 1) {\n          return false;\n        }\n        return a < b[0];\n      },\n      'any': function(a, b) { \n        return b.includes(String(a));\n      },\n      'none': function(a, b) { \n        return !b.includes(String(a));\n      },\n      'in': function(a, b) { \n        return b.includes(a);\n      },\n      'contains': function(a, b) { \n        if (b.length !== 1 || !b[0]) {\n          return false;\n        }\n        return String(a).includes(b[0]);\n      },\n    };\n\n    const operatorsByType = {\n      string: ['equals', 'any', 'none', 'in', 'contains'],\n      number: ['equals', 'greater_than', 'less_than', 'any', 'none', 'in', 'contains'],\n      enumerated: ['equals', 'any', 'none', 'in']\n    }\n\n    let operatorFn = operatorFns[this.state.operator];\n\n    return (\n      <div className=\"Products\">\n        <form className={classes.root} autoComplete=\"off\">\n          <FormControl className={classes.formControl}>\n            <Grid container spacing={24}>\n              <Grid item xs={6}>\n                <Select\n                  value={this.state.property}\n                  onChange={this.handleChange}\n                  inputProps={{\n                    name: 'property',\n                    id: 'property-simple',\n                  }}\n                >\n                  <MenuItem value=\"-1\">\n                    <em>Select a Property</em>\n                  </MenuItem>\n                  {window.datastore.getProperties().map(property => (\n                    <MenuItem value={property.id} key={`property-select-${property.id}`}>{property.name.capitalize()}</MenuItem>\n                  ))}\n                </Select>\n              </Grid>\n              <Grid item xs={6}>\n                <Select\n                  value={this.state.operator}\n                  onChange={this.handleChange}\n                  inputProps={{\n                    name: 'operator',\n                    id: 'operator-simple',\n                  }}\n                >\n                  {this.state.operator === -1 && \n                     <MenuItem value=\"-1\">\n                      <em>Select an Operator</em>\n                    </MenuItem>\n                  }\n                  {window.datastore.getOperators().filter(operator => operatorsByType[this.state.propertyType].includes(operator.id)).map(operator => (\n                    <MenuItem value={operator.id} key={`operator-select-${operator.id}`}>{operator.text}</MenuItem>\n                  ))}\n                </Select>\n              </Grid>\n              {this.state.property !== -1 &&\n                <Grid item xs={6}>\n                  <Select\n                    multiple\n                    native\n                    value={this.state.propertyValue}\n                    onChange={this.handleChangeMultiple}\n                    inputProps={{\n                      id: 'select-multiple-native',\n                    }}\n                  >\n                    {this.state.propertyValues.map(property => (\n                      <option key={`property-value-selector${property}`} value={property}>\n                        {property}\n                      </option>\n                    ))}\n                  </Select>\n                </Grid>\n              }\n            </Grid>\n          </FormControl>\n          <Grid item xs={6}>\n            <Button \n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={this.resetState}\n            >\n              Clear\n            </Button>\n          </Grid>\n        </form>\n        <div className=\"product-table\">\n          <Paper className={classes.root}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  {window.datastore.getProperties().map(property => (\n                    <TableCell key={`property-column-header-${property.id}`} align=\"left\">{property.name.capitalize()}</TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.operator !== -1 ?\n                  window.datastore.getProducts()\n                    .filter((element) => \n                      element.property_values.some((propertyValue) => propertyValue.property_id === this.state.property && operatorFn(propertyValue.value, this.state.propertyValue)))\n                    .map(product => (\n                      <TableRow key={`product-row-${product.id}`}>\n                        {product.property_values.map(property => (\n                          <TableCell key={`cell-value-${product.id}-${property.property_id}`} scope=\"row\">\n                            {typeof(property.value) == \"string\" ? property.value.capitalize() : property.value}\n                          </TableCell>\n                        ))}\n                      </TableRow>\n                  ))\n                  :\n                  window.datastore.getProducts().map(product => (\n                    <TableRow key={`product-row-${product.id}`}>\n                      {product.property_values.map(property => (\n                        <TableCell key={`cell-value-${product.id}-${property.property_id}`} scope=\"row\">\n                          {typeof(property.value) == \"string\" ? property.value.capitalize() : property.value}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n            </Table>\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: '5rem',\n    marginRight: '5rem',\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexGrow: 1\n  },\n  table: {\n    minWidth: 700,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 300,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\nProducts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Products);\n","import React, { Component } from 'react';\nimport Products from './Products';\nimport './datastore';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Products></Products>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}